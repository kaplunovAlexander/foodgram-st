# Generated by Django 3.2.16 on 2025-05-09 15:58

import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        error_messages={
                            "blank": "Имя обязательно для заполнения.",
                            "max_length": "Имя не должно превышать 64 символа.",
                        },
                        help_text="Введите ваше имя (только буквы)",
                        max_length=64,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Имя может содержать только буквы, пробел и дефис",
                                regex="^[А-Яа-яA-Za-z\\- ]+$",
                            )
                        ],
                        verbose_name="Имя",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        error_messages={
                            "blank": "Фамилия обязательна для заполнения.",
                            "max_length": "Фамилия не должна превышать 64 символа.",
                        },
                        help_text="Введите вашу фамилию (только буквы)",
                        max_length=64,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Фамилия может содержать только буквы, пробел и дефис",
                                regex="^[А-Яа-яA-Za-z\\- ]+$",
                            )
                        ],
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "blank": "Имя пользователя обязательно для заполнения.",
                            "max_length": "Имя пользователя не должно превышать 64 символа.",
                            "unique": "Пользователь с таким именем уже существует.",
                        },
                        help_text="Введите уникальное имя пользователя (только латиница, цифры, дефис, подчёркивание)",
                        max_length=64,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Имя пользователя может содержать только латинские буквы, цифры, дефис и подчёркивание",
                                regex="^[a-zA-Z0-9_-]+$",
                            )
                        ],
                        verbose_name="Имя пользователя",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "blank": "Электронная почта обязательна для заполнения.",
                            "invalid": "Введите корректный адрес электронной почты.",
                            "max_length": "Электронная почта не должна превышать 128 символа.",
                            "unique": "Пользователь с такой электронной почтой уже зарегистрирован.",
                        },
                        help_text="Введите действительный адрес электронной почты",
                        max_length=128,
                        unique=True,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Введите корректный адрес электронной почты."
                            )
                        ],
                        verbose_name="Электронная почта",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        error_messages={
                            "blank": "Пароль обязательно для заполнения.",
                            "max_length": "Пароль не должен превышать 128 символов.",
                        },
                        help_text="Пароль должен содержать минимум 8 символов, включая хотя бы одну цифру, одну букву и один специальный символ.",
                        max_length=128,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Пароль должен содержать минимум 8 символов, включая хотя бы одну цифру, одну букву и один специальный символ.",
                                regex="^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
                            )
                        ],
                        verbose_name="Пароль",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
